{"version":3,"sources":["app.js","states.js","templates.js","services/authentication-service.js","services/categories-service.js","services/listings-service.js","services/token-interceptor.js","services/user-login-service.js","services/users-service.js","components/categories/categories-component.js","components/categories/category-widget-component.js","components/categories/create-category-widget-component.js","components/layout/footer-component.js","components/layout/header-component.js","components/layout/login-logout-widget-component.js","components/layout/root-component.js","components/listings/edit-listing-form-component.js","components/listings/listing-component.js","components/listings/listings-component.js","components/listings/post-listing-form-component.js","components/users/create-user-form-component.js","components/users/edit-user-form-component.js","components/users/user-component.js","components/users/users-component.js"],"names":["angular","module","config","$httpProvider","interceptors","push","run","$transitions","$state","onError","go","authenticationService","check","value","adminEditMode","$stateProvider","$locationProvider","$urlRouterProvider","otherwise","rootState","name","abstract","component","resolve","uncategorized","categoriesService","getListingsForCategory","categoriesState","url","views","content-view","categories","getAllCategories","listingsState","category","$stateParams","listingState","listing","listingsService","getListing","listingId","params","newListingState","data","protected","editListingState","usersState","users","usersService","getAllUsers","userState","user","getSingleUser","email","newUserState","editUserState","state","html5Mode","$templateCache","put","service","$window","vm","this","bindings","loggedIn","localStorage","token","admin","JSON","parse","$http","get","then","filter","createCategory","post","editCategory","removeCategory","delete","postListing","editListing","deleteListing","tokenInterceptor","request","headers","factory","$inject","$q","globals","login","password","result","logout","createUser","updateUser","deleteUser","categoriesComponentController","$scope","broadcastCloseAllOthers","except","$broadcast","controller","templateUrl","categoryWidgetComponentController","$timeout","errors","categoryExists","unknownError","formOpen","newCategoryName","$onInit","beginEdit","onBeginEdit","document","getElementById","focus","select","cancelEdit","resetErrors","deleteCategory","current","reload","catch","err","console","error","submitCategory","status","$on","event","_id","createCategoryWidgetComponentController","headerComponentController","authenticationBindings","toggleAdminEditMode","loginLogoutWidgetController","userLoginService","invalidLogin","cancelLogin","categoryRequired","checkboxesState","allCategoryIds","map","Object","assign","currentCategoryIds","categoryId","indexOf","$watch","submitForm","length","window","alert","confirm","passwordMismatched","emailExists","weakPassword","passwordConfirmation","userForm","$setPristine"],"mappings":"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","file":"main.js","sourcesContent":["(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\", [\"ui.router\"]).\r\n  \r\n  config([\"$httpProvider\", function($httpProvider){\r\n\r\n    //insert an interceptor into all $http calls\r\n    $httpProvider.interceptors.push(\"tokenInterceptor\");\r\n  }]).\r\n\r\n  run([\"$transitions\", \"$state\", function($transitions, $state){\r\n    \r\n    //if error in transition, change to the categories state (home page)\r\n    $transitions.onError({}, function(){\r\n      $state.go(\"root-state.categories-state\");\r\n    });\r\n  }]).\r\n\r\n  run([\"authenticationService\", function(authenticationService){\r\n\r\n    //check if logged in\r\n    authenticationService.check();\r\n  }]).\r\n\r\n  value(\"globals\", {\r\n\r\n    //set admin edit mode to false\r\n    adminEditMode: false\r\n  });\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tconfig([\"$stateProvider\", \"$locationProvider\", \"$urlRouterProvider\",\r\n\t\tfunction($stateProvider, $locationProvider, $urlRouterProvider){\r\n\t\t\t$urlRouterProvider.otherwise(\"/\");\r\n\t\t\tvar rootState = {\r\n\t\t\t\tname: \"root-state\",\r\n\t\t\t\tabstract: true,\r\n\t\t\t\tcomponent: \"rootComponent\",\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tuncategorized: [\"categoriesService\", function(categoriesService){\r\n\t\t\t\t\t\treturn categoriesService.getListingsForCategory(\"uncategorized\");\r\n\t\t\t\t\t}],\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar categoriesState = {\r\n\t\t\t\tname: \"root-state.categories-state\",\r\n\t\t\t\turl: \"/\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"categoriesComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tcategories: [\"categoriesService\", function(categoriesService){\r\n\t\t\t\t\t\treturn categoriesService.getAllCategories();\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar listingsState = {\r\n\t\t\t\tname: \"root-state.listings-state\",\r\n\t\t\t\turl: \"/category/{category}\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"listingsComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tcategory: [\"categoriesService\", \"$stateParams\", function(categoriesService, $stateParams){\r\n\t\t\t\t\t\treturn categoriesService.getListingsForCategory($stateParams.category);\r\n\t\t\t\t\t}]\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar listingState = {\r\n\t\t\t\tname: \"root-state.listing-state\",\r\n\t\t\t\turl: \"/listing/{listingId}\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"listingComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tlisting: [\"listingsService\", \"$stateParams\", function(listingsService, $stateParams){\r\n\t\t\t\t\t\treturn listingsService.getListing($stateParams.listingId);\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tcategory: {}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar newListingState = {\r\n\t\t\t\tname: \"root-state.new-listing-state\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"postListingFormComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tcategories: [\"categoriesService\", function(categoriesService){\r\n\t\t\t\t\t\treturn categoriesService.getAllCategories();\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar editListingState = {\r\n\t\t\t\tname: \"root-state.edit-listing-state\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"editListingFormComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tcategories: [\"categoriesService\", function(categoriesService){\r\n\t\t\t\t\t\treturn categoriesService.getAllCategories();\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tlisting: {}\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar usersState = {\r\n\t\t\t\tname: \"root-state.users-state\",\r\n\t\t\t\turl: \"/users\",\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tusers: [\"usersService\", function(usersService){\r\n\t\t\t\t\t\treturn usersService.getAllUsers();\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"usersComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar userState = {\r\n\t\t\t\tname: \"root-state.user-state\",\r\n\t\t\t\turl: \"/user/{email}\",\r\n\t\t\t\tresolve: {\r\n\t\t\t\t\tuser: [\"usersService\", \"$stateParams\", function(usersService, $stateParams){\r\n\t\t\t\t\t\treturn usersService.getSingleUser($stateParams.email);\r\n\t\t\t\t\t}]\r\n\t\t\t\t},\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"userComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar newUserState = {\r\n\t\t\t\tname: \"root-state.new-user-state\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"createUserFormComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvar editUserState = {\r\n\t\t\t\tname: \"root-state.edit-user-state\",\r\n\t\t\t\tviews: {\r\n\t\t\t\t\t\"content-view\": \"editUserFormComponent\"\r\n\t\t\t\t},\r\n\t\t\t\tparams: {\r\n\t\t\t\t\tuser: {}\r\n\t\t\t\t},\r\n\t\t\t\tdata: {\r\n\t\t\t\t\tprotected: \"user\"\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t$stateProvider.state(rootState);\r\n\t\t\t$stateProvider.state(categoriesState);\r\n\t\t\t$stateProvider.state(listingsState);\r\n\t\t\t$stateProvider.state(listingState);\r\n\t\t\t$stateProvider.state(newListingState);\r\n\t\t\t$stateProvider.state(editListingState);\r\n\t\t\t$stateProvider.state(usersState);\r\n\t\t\t$stateProvider.state(userState);\r\n\t\t\t$stateProvider.state(newUserState);\r\n\t\t\t$stateProvider.state(editUserState);\r\n\t\t\t$locationProvider.html5Mode(true);\r\n\t\t}]);\r\n})();","(function(){angular.module('mikeslist').run(['$templateCache', function($templateCache) {$templateCache.put('categories-component.tpl','<ul>\\r\\n\\r\\n  <li ng-repeat=\"category in $ctrl.categories\">\\r\\n    <category-widget-component\\r\\n      category=\"category\"\\r\\n      on-begin-edit=\"$ctrl.broadcastCloseAllOthers(except)\">\\r\\n    </category-widget-component>\\r\\n  </li>\\r\\n\\r\\n  <li ng-if=\"$ctrl.globals.adminEditMode &&\\r\\n             $ctrl.uncategorized.listingCount > 0\">\\r\\n    <a ui-sref=\"root-state.listings-state({category: \\'uncategorized\\'})\">      uncategorized ({{$ctrl.uncategorized.listingCount}})</a>\\r\\n  </li>\\r\\n  \\r\\n  <li ng-if=\"$ctrl.globals.adminEditMode\">\\r\\n    <create-category-widget-component\\r\\n      on-begin-edit=\"$ctrl.broadcastCloseAllOthers(except)\">\\r\\n    </create-category-widget-component>\\r\\n  </li>\\r\\n  \\r\\n</ul>');\n$templateCache.put('category-widget-component.tpl','<a href=\"\"\\r\\n   ng-click=\"$ctrl.deleteCategory()\"\\r\\n   ng-if=\"!$ctrl.formOpen &&\\r\\n          $ctrl.globals.adminEditMode\">X</a>\\r\\n\\r\\n<a ng-if=\"!$ctrl.formOpen\"\\r\\n   ui-sref=\"root-state.listings-state({category: $ctrl.category.name})\">{{$ctrl.category.name}} ({{$ctrl.category.listingCount}})</a>\\r\\n\\r\\n<a href=\"\"\\r\\n   ng-click=\"$ctrl.beginEdit()\"\\r\\n   ng-if=\"!$ctrl.formOpen &&\\r\\n          $ctrl.globals.adminEditMode\" >Edit</a>\\r\\n\\r\\n<form name=\"categoryForm\"\\r\\n      ng-if=\"$ctrl.formOpen\"\\r\\n      ng-submit=\"categoryForm.$valid &&\\r\\n                 $ctrl.submitCategory()\"\\r\\n      novalidate>\\r\\n\\r\\n  <div class=\"error-messages\">\\r\\n\\r\\n    <div class=\"error-message error-message-category-required\"\\r\\n         ng-if=\"categoryForm.$submitted &&\\r\\n                categoryForm.category.$error.required\">\\r\\n      Category name is required\\r\\n    </div>\\r\\n\\r\\n    <div class=\"error-message error-message-category-exists\"\\r\\n         ng-if=\"$ctrl.errors.categoryExists\">\\r\\n      Category with this name already exists\\r\\n    </div>\\r\\n\\r\\n    <div class=\"error-message error-message-unknown-error\"\\r\\n         ng-if=\"$ctrl.errors.unknownError\">\\r\\n      Unknown error has occured. Contact site administrator\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <input id=\"category-edit-field\"\\r\\n         name=\"category\"\\r\\n         ng-change=\"categoryForm.$valid &&\\r\\n                    categoryForm.$setPristine()\"\\r\\n         ng-keydown=\"$ctrl.resetErrors()\"\\r\\n         ng-model=\"$ctrl.newCategoryName\"\\r\\n         required\\r\\n         type=\"text\">\\r\\n\\r\\n  <button type=\"submit\">OK</button>\\r\\n\\r\\n  <button ng-click=\"$ctrl.cancelEdit()\"\\r\\n          type=\"button\">\\r\\n    Cancel\\r\\n  </button>\\r\\n</form>');\n$templateCache.put('create-category-widget-component.tpl','<a href=\"\"\\r\\n   ng-click=\"$ctrl.beginEdit()\"\\r\\n   ng-if=\"!$ctrl.formOpen\">Add Category</a>\\r\\n\\r\\n<form name=\"categoryForm\"\\r\\n      ng-if=\"$ctrl.formOpen\"\\r\\n      ng-submit=\"categoryForm.$valid &&\\r\\n                 $ctrl.submitCategory()\"\\r\\n      novalidate>\\r\\n\\r\\n  <div class=\"error-messages\">\\r\\n\\r\\n    <div class=\"error-message error-message-category-required\"\\r\\n         ng-if=\"categoryForm.$submitted &&\\r\\n                categoryForm.category.$error.required\">\\r\\n      Category name is required\\r\\n    </div>\\r\\n\\r\\n    <div class=\"error-message error-message-category-exists\"\\r\\n         ng-if=\"$ctrl.errors.categoryExists\">\\r\\n      Category with this name already exists\\r\\n    </div>\\r\\n\\r\\n    <div class=\"error-message error-message-unknown-error\"\\r\\n         ng-if=\"$ctrl.errors.unknownError\">\\r\\n      Unknown error has occured. Contact site administrator\\r\\n    </div>\\r\\n\\r\\n  </div>\\r\\n\\r\\n  <input id=\"category-create-field\"\\r\\n         name=\"category\"\\r\\n         ng-change=\"categoryForm.$valid &&\\r\\n                    categoryForm.$setPristine()\"\\r\\n         ng-keydown=\"$ctrl.resetErrors()\"\\r\\n         ng-model=\"$ctrl.newCategoryName\"\\r\\n         placeholder=\"new category\"\\r\\n         required\\r\\n         type=\"text\">\\r\\n\\r\\n  <button type=\"submit\">OK</button>\\r\\n\\r\\n  <button ng-click=\"$ctrl.cancelEdit()\"\\r\\n          type=\"button\">\\r\\n    Cancel\\r\\n  </button>\\r\\n</form>');\n$templateCache.put('footer-component.tpl','<h1>This is the Footer</h1>');\n$templateCache.put('header-component.tpl','<h1>This is the Header</h1>\\r\\n\\r\\n<pre>\\r\\nDevelopment testing data\\r\\nAdmin user: msemko@gmail.com\\r\\nPassword:   warcraft\\r\\n</pre>\\r\\n\\r\\n<a ui-sref=\"root-state.categories-state\">Go home</a>\\r\\n\\r\\n<br>\\r\\n\\r\\n<a href=\"\"\\r\\n   ng-if=\"$ctrl.authenticationBindings.loggedIn\"\\r\\n   ui-sref=\"root-state.new-listing-state\">Post New Listing</a>\\r\\n\\r\\n<a href=\"\"\\r\\n   ng-click=\"$ctrl.toggleAdminEditMode()\"\\r\\n   ng-if=\"$ctrl.authenticationBindings.loggedIn &&\\r\\n          $ctrl.authenticationBindings.admin && \\r\\n          !$ctrl.globals.adminEditMode\">Edit Mode Off</a>\\r\\n\\r\\n<a href=\"\"\\r\\n   ng-click=\"$ctrl.toggleAdminEditMode()\"\\r\\n   ng-if=\"$ctrl.authenticationBindings.loggedIn &&\\r\\n   \\t\\t    $ctrl.authenticationBindings.admin &&\\r\\n   \\t\\t    $ctrl.globals.adminEditMode\">Edit Mode On</a>\\r\\n\\r\\n<login-logout-widget-component></login-logout-widget-component>\\r\\n\\r\\n<a ng-if=\"$ctrl.authenticationBindings.loggedIn && \\r\\n          $ctrl.authenticationBindings.admin\"\\r\\n   ui-sref=\"root-state.users-state\">Users</a>\\r\\n\\r\\n<a ng-if=\"$ctrl.authenticationBindings.loggedIn && \\r\\n          $ctrl.authenticationBindings.admin\"\\r\\n   ui-sref=\"root-state.listings-state({category: \\'uncategorized\\'})\">uncategorized ({{$ctrl.uncategorized.listingCount}})</a>');\n$templateCache.put('login-logout-widget-component.tpl','<div class=\"login-logout-widget\">\\r\\n  \\r\\n  <a href=\"\"\\r\\n     ng-click=\"$ctrl.formOpen = true\"\\r\\n     ng-if=\"!$ctrl.formOpen &&\\r\\n            !$ctrl.authenticationBindings.loggedIn\">\\r\\n    Login</a>\\r\\n\\r\\n  <span ng-if=\"$ctrl.authenticationBindings.loggedIn\">\\r\\n    Logged in as: {{$ctrl.authenticationBindings.email}}</span>\\r\\n\\r\\n  <a href=\"\"\\r\\n     ng-click=\"$ctrl.logout()\"\\r\\n     ng-if=\"$ctrl.authenticationBindings.loggedIn\">\\r\\n    Logout</a>\\r\\n\\r\\n  <form ng-if=\"$ctrl.formOpen\"\\r\\n        ng-submit=\"$ctrl.login()\">\\r\\n\\r\\n    <div class=\"error-messages\">\\r\\n\\r\\n      <div class=\"error-message error-message-login-invalid\"\\r\\n           ng-if=\"$ctrl.errors.invalidLogin\">\\r\\n        Invalid email or password\\r\\n      </div>\\r\\n\\r\\n      <div class=\"error-message error-message-unknown-error\"\\r\\n           ng-if=\"$ctrl.errors.unknownError\">\\r\\n        Unknown error has occured. Contact site administrator\\r\\n      </div>\\r\\n\\r\\n    </div>\\r\\n      \\r\\n    <input ng-keydown=\"$ctrl.resetErrors()\"\\r\\n           ng-model=\"$ctrl.email\"\\r\\n           type=\"text\">\\r\\n\\r\\n    <input ng-keydown=\"$ctrl.resetErrors()\"\\r\\n           ng-model=\"$ctrl.password\"\\r\\n           type=\"password\">\\r\\n\\r\\n    <button type=\"submit\">Login</button>\\r\\n\\r\\n    <button ng-click=\"$ctrl.cancelLogin()\"\\r\\n            type=\"button\">\\r\\n      Cancel\\r\\n    </button>\\r\\n  </form>\\r\\n  \\r\\n</div>');\n$templateCache.put('root-component.tpl','<header class=\"site-header\">\\r\\n  <header-component uncategorized=\"$ctrl.uncategorized\"></header-component>\\r\\n</header>\\r\\n\\r\\n<main class=\"site-main\"\\r\\n      ui-view=\"content-view\">\\r\\n</main>\\r\\n\\r\\n<footer class=\"site-footer\">\\r\\n  <footer-component></footer-component>\\r\\n</footer>');\n$templateCache.put('listing-component.tpl','<h2>{{$ctrl.listing.title}}</h2>\\r\\n<p>{{$ctrl.listing.body}}</p>\\r\\n<p>{{$ctrl.listing.posterEmail}}</p>\\r\\n<p>This listing can be found in these categories:</p>\\r\\n<ul>\\r\\n\\t<li ng-repeat=\"category in $ctrl.listing.categories\">\\r\\n\\t\\t<a ui-sref=\"root-state.listings-state({category: category.name})\">{{category.name}}</a>\\r\\n\\t</li>\\r\\n</ul>\\r\\n<a ng-if=\"$ctrl.authenticationBindings.email === $ctrl.listing.posterEmail || $ctrl.authenticationBindings.admin\" href=\"\" ui-sref=\"root-state.edit-listing-state({listing: $ctrl.listing})\">edit me</a>\\r\\n<a ng-if=\"$ctrl.authenticationBindings.email === $ctrl.listing.posterEmail || $ctrl.authenticationBindings.admin\" href=\"\" ng-click=\"$ctrl.deleteListing()\">delete me</a>');\n$templateCache.put('listing-form.tpl','<form name=\"postListingForm\" ng-submit=\"postListingForm.$valid && $ctrl.submitForm()\" novalidate>\\r\\n\\t<div class=\"error-messages\">\\r\\n\\t\\t<div class=\"error-message error-message-min-title-length\" ng-if=\"postListingForm.$submitted && postListingForm.title.$error.minlength\">\\r\\n\\t\\t\\tTitle must be longer than 3 characters\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-title-required\" ng-if=\"postListingForm.$submitted && postListingForm.title.$error.required\">\\r\\n\\t\\t\\tTitle is required\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-body-required\" ng-if=\"postListingForm.$submitted && postListingForm.body.$error.required\">\\r\\n\\t\\t\\tListing cannot be empty\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-category-required\" ng-if=\"\\r\\n\\t\\t$ctrl.errors.categoryRequired\">\\r\\n\\t\\t\\tYou must pick at least 1 category\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<input ng-model=\"$ctrl.listing.title\"\\r\\n\\t\\t   type=\"text\"\\r\\n\\t\\t   placeholder=\"title\"\\r\\n\\t\\t   required\\r\\n\\t\\t   minlength=\"3\"\\r\\n\\t\\t   maxlength=\"255\"\\r\\n\\t\\t   name=\"title\"\\r\\n\\t\\t   ng-change=\"postListingForm.$valid && postListingForm.$setPristine()\">\\r\\n\\t<span ng-if=\"255 - $ctrl.listing.title.length <= 20\">{{255 - $ctrl.listing.title.length}}</span>\\r\\n\\t<br>\\r\\n\\t<textarea ng-model=\"$ctrl.listing.body\"\\r\\n\\t\\t\\t  name=\"body\"\\r\\n\\t\\t\\t  required\\r\\n\\t\\t\\t  ng-change=\"postListingForm.$valid && postListingForm.$setPristine()\"></textarea>\\r\\n\\t<br>\\r\\n\\t<label for=\"{{category.name + \\'_checkbox\\'}}\"\\r\\n\\t       ng-repeat-start=\"category in $ctrl.categories\">{{category.name}}</label>\\r\\n\\t<input id=\"{{category.name + \\'_checkbox\\'}}\"\\r\\n\\t       ng-model=\"$ctrl.checkboxesState[$index]\"\\r\\n\\t\\t   ng-repeat-end\\r\\n\\t\\t   ng-true-value=\"\\'{{category._id}}\\'\"\\r\\n\\t\\t   ng-change=\"$ctrl.errors.categoryRequired = false\"\\r\\n\\t\\t   type=\"checkbox\">\\r\\n\\t<br>\\r\\n\\t<button type=\"submit\">Submit Form</button>\\r\\n</form>');\n$templateCache.put('listings-component.tpl','<ul>\\r\\n\\t<li ng-repeat=\"listing in $ctrl.category.listings\"><a ui-sref=\"root-state.listing-state({listingId: listing._id, category: $ctrl.category})\">{{listing.title}}</a></li>\\r\\n</ul>\\r\\n<div ng-if=\"$ctrl.category.listingCount === 0\">This category is empty</div>');\n$templateCache.put('user-component.tpl','<h1>{{$ctrl.user.email}}</h1>\\r\\n<p ng-if=\"$ctrl.user.admin\">User is admin</p>\\r\\n<a href=\"\" ui-sref=\"root-state.edit-user-state({user: $ctrl.user})\">Edit me</a>\\r\\n<a href=\"\" ng-click=\"$ctrl.deleteUser()\" ng-if=\"$ctrl.authenticationBindings.email !== $ctrl.user.email\">Delete me</a>');\n$templateCache.put('user-form.tpl','<form name=\"userForm\" ng-submit=\"userForm.$valid && $ctrl.submitForm()\" novalidate>\\r\\n\\t<div class=\"error-messages\">\\r\\n\\t\\t<div class=\"error-message error-message-email-required\" ng-if=\"userForm.$submitted && userForm.email.$error.required\">\\r\\n\\t\\t\\tEmail address is required\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-email-required\" ng-if=\"userForm.$submitted && userForm.email.$error.email\">\\r\\n\\t\\t\\tEmail address is invalid\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-password-required\" ng-if=\"userForm.$submitted && userForm.password.$error.required\">\\r\\n\\t\\t\\tPassword is required\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-confirmation-required\" ng-if=\"userForm.$submitted && userForm.confirmation.$error.required\">\\r\\n\\t\\t\\tPassword confirmation is required\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-passwords-mismatched\" ng-if=\"$ctrl.errors.passwordMismatched\">\\r\\n\\t\\t\\tPasswords do not match\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-email-taken\" ng-if=\"$ctrl.errors.emailExists\">\\r\\n\\t\\t\\tEmail is already taken\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-password-weak\" ng-if=\"$ctrl.errors.weakPassword\">\\r\\n\\t\\t\\tThis password is too weak. Please refer to instructions below\\r\\n\\t\\t</div>\\r\\n\\t\\t<div class=\"error-message error-message-unknown-error\" ng-if=\"$ctrl.errors.unknownError\">\\r\\n\\t\\t\\tUnknown error has occured. Contact site administrator\\r\\n\\t\\t</div>\\r\\n\\t</div>\\r\\n\\t<input id=\"email-field\" ng-model=\"$ctrl.user.email\"\\r\\n\\t\\t   type=\"email\"\\r\\n\\t\\t   placeholder=\"user@example.com\"\\r\\n\\t\\t   required\\r\\n\\t\\t   name=\"email\"\\r\\n\\t\\t   ng-keydown=\"$ctrl.resetErrors()\"\\r\\n\\t\\t   ng-change=\"userForm.$valid && userForm.$setPristine()\">\\r\\n\\t<br>\\r\\n\\t<label for=\"admin-checkbox\">User is admin: </label>\\r\\n\\t<input type=\"checkbox\"\\r\\n\\t\\t   ng-model=\"$ctrl.user.admin\"\\r\\n\\t\\t   ng-disabled=\"$ctrl.email && $ctrl.authenticationBindings.email === $ctrl.email\">\\r\\n\\t<br>\\r\\n\\t<input type=\"password\"\\r\\n\\t       ng-model=\"$ctrl.user.password\"\\r\\n\\t       ng-required=\"!$ctrl.email\"\\r\\n\\t       placeholder=\"password\"\\r\\n\\t       name=\"password\"\\r\\n\\t       ng-keydown=\"$ctrl.resetErrors()\"\\r\\n\\t       ng-change=\"userForm.$valid && userForm.$setPristine()\">\\r\\n\\t<br>\\r\\n\\t<input type=\"password\"\\r\\n\\t       ng-model=\"$ctrl.user.passwordConfirmation\"\\r\\n\\t       ng-required=\"!$ctrl.email\"\\r\\n\\t       placeholder=\"confirm password\"\\r\\n\\t       name=\"confirmation\"\\r\\n\\t       ng-keydown=\"$ctrl.resetErrors()\"\\r\\n\\t       ng-change=\"userForm.$valid && userForm.$setPristine()\">\\r\\n\\t<br>\\r\\n\\t<button type=\"submit\"\\r\\n\\t\\t\\tng-click=\"$ctrl.errors.passwordMismatched = \\'\\'\">\\r\\n\\t\\tSubmit Form\\r\\n\\t</button>\\r\\n</form>\\r\\n<pre>Password requirements:\\r\\nPassword needs to be between 8-20 charachers long</pre>');\n$templateCache.put('users-component.tpl','<ul>\\r\\n\\t<li ng-repeat=\"user in $ctrl.users\">\\r\\n\\t\\t<a ui-sref=\"root-state.user-state({email: user.email})\">{{user.email}}</a>\\r\\n\\t</li>\\r\\n\\t<li>\\r\\n\\t\\t<a href=\"\" ui-sref=\"root-state.new-user-state\">Create new user</a>\\r\\n\\t</li>\\r\\n</ul>');}]);})();","//This service maintains information about loggedIn state\r\n//and checks the browser's local storage for login information\r\n//\r\n//The service does not verify the credentials with the backend\r\n//it assumes user is logged in if the token is present\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tservice(\"authenticationService\", [\"$window\", function($window){\r\n\t\tvar vm = this;\r\n\r\n\t\t//bindings are placed into an object to be bound to the DOM\r\n\t\tvm.bindings = {\r\n\t\t\tloggedIn: false,\r\n\t\t};\r\n\r\n\t\t//this function checks the local storage to see if login information is present\r\n\t\t//if it is, it is written into the bindings above\r\n\t\t//if not the bindings are reset\r\n\t\t//the function is called by the intercepror on page load\r\n\t\tvm.check = function() {\r\n\t\t\tif ($window.localStorage.email && $window.localStorage.token) {\r\n\t\t\t\tvm.bindings.loggedIn = true;\r\n\t\t\t\tvm.bindings.email = $window.localStorage.email;\r\n\t\t\t\tvm.bindings.admin = JSON.parse($window.localStorage.admin);\r\n\t\t\t} else {\r\n\t\t\t\tvm.bindings.loggedIn = false;\r\n\t\t\t\tdelete vm.bindings.email;\r\n\t\t\t\tdelete vm.bindings.admin;\r\n\t\t\t}\r\n\t\t};\r\n\t}]);\r\n})();","//This service provides access to the \"categories\" api\r\n//The following functions are exposed:\r\n//\r\n//getAllCategories: gets an array of category objects with _id, name, and listing id array\r\n//listingCount virtual field is also available, the listing contents are NOT populated\r\n//the 'uncategorized' category is deliberately omitted, it can only be retrieved\r\n//using the 'getListingsForCategory' function\r\n//\r\n//getListingsForCategory: gets a single category object by name, includes all of the above\r\n//fields and also populates all listing content\r\n//\r\n//createCategory: creates a category with a given name\r\n//\r\n//editCategory: updates category with a given name by assigning the category object (second parameter)\r\n//\r\n//removeCategory: removes category with a given name, if it contains listings\r\n//the category will be removed from each listing\r\n//all orphaned listings will be added to the 'uncategorized' category\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tservice(\"categoriesService\", [\"$http\", function($http){\r\n\t\tvar vm = this;\r\n\t\tvm.getAllCategories = function() {\r\n\t\t\treturn $http.get(\"/api/v1/categories\").then(function(data){\r\n\t\t\t\treturn data.data.filter(function(category){\r\n\t\t\t\t\treturn category.name !== \"uncategorized\";\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.getListingsForCategory = function(name) {\r\n\t\t\treturn $http.get(\"/api/v1/category/\" + name).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.createCategory = function(name) {\r\n\t\t\treturn $http.post(\"/api/v1/category\", {name: name}).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.editCategory = function(name, category) {\r\n\t\t\treturn $http.put(\"/api/v1/category/\" + name, category).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.removeCategory = function(name) {\r\n\t\t\treturn $http.delete(\"/api/v1/category/\" + name).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t}]);\r\n})();","//This service provides the basic listing CRUD api access\r\n//any updates or deletion of listings will be reflected on the categories\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tservice(\"listingsService\", [\"$http\", function($http){\r\n\t\tvar vm = this;\r\n\t\tvm.getListing = function(listingId){\r\n\t\t\treturn $http.get(\"/api/v1/listing/\" + listingId).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.postListing = function(listing) {\r\n\t\t\treturn $http.post(\"/api/v1/listing\", listing).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.editListing = function(listingId, listing) {\r\n\t\t\treturn $http.put(\"/api/v1/listing/\" + listingId, listing).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.deleteListing = function(listingId) {\r\n\t\t\treturn $http.delete(\"/api/v1/listing/\" + listingId).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t}]);\r\n})();","//This service acts as an interceptor for all $http requests\r\n//It appends a token to every request if the token exists\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tfactory(\"tokenInterceptor\", tokenInterceptor);\r\n\r\n\ttokenInterceptor.$inject = [\"$window\"];\r\n\r\n\tfunction tokenInterceptor($window) {\r\n\t\treturn {\r\n\t\t\trequest: function(config) {\r\n\t\t\t\tif ($window.localStorage.token) {\r\n\t\t\t\t\tconfig.headers[\"x-access-token\"] = $window.localStorage.token;\r\n\t\t\t\t}\r\n\t\t\t\treturn config;\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n})();","//This service contacts controls the login/logous functionality\r\n//it exposes two functions\r\n//\r\n//login: this function takes and email and password, contacts the backend,\r\n//and passes along the authentication information\r\n//in case of successful login it sets the user email and token on local storage\r\n//and switches the authentication service status to loggedIn\r\n//\r\n//logout: this function does not contact the backend\r\n//it simply erases the token and email from local storage,\r\n//and sets the loggedIn status to false\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tservice(\"userLoginService\", [\"$http\", \"$window\", \"$q\", \"authenticationService\", \"globals\", function($http, $window, $q, authenticationService, globals){\r\n\t\tvar vm = this;\r\n\t\tvm.login = function(email, password) {\r\n\t\t\treturn $http.post(\"/login\", {email: email, password: password}).then(function(data){\r\n\t\t\t\t$window.localStorage.email = data.data.email;\r\n\t\t\t\t$window.localStorage.admin = data.data.admin;\r\n\t\t\t\t$window.localStorage.token = data.data.token;\r\n\t\t\t\tauthenticationService.bindings.loggedIn = true;\r\n\t\t\t\tauthenticationService.bindings.email = data.data.email;\r\n\t\t\t\tauthenticationService.bindings.admin = data.data.admin;\r\n\t\t\t\treturn $q.resolve({result: \"success\"});\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.logout = function() {\r\n\t\t\tdelete $window.localStorage.token;\r\n\t\t\tdelete $window.localStorage.email;\r\n\t\t\tdelete $window.localStorage.admin;\r\n\t\t\tdelete authenticationService.bindings.email;\r\n\t\t\tdelete authenticationService.bindings.admin;\r\n\t\t\tauthenticationService.bindings.loggedIn = false;\r\n\t\t\tglobals.adminEditMode = false;\r\n\t\t\treturn $q.resolve({result: \"success\"});\r\n\t\t};\r\n\t}]);\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tservice(\"usersService\", [\"$http\", function($http){\r\n\t\tvar vm = this;\r\n\t\tvm.getAllUsers = function() {\r\n\t\t\treturn $http.get(\"/api/v1/users\").then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.getSingleUser = function(email) {\r\n\t\t\treturn $http.get(\"/api/v1/user/\" + email).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.createUser = function(user) {\r\n\t\t\treturn $http.post(\"/api/v1/user\", user).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.updateUser = function(email, user) {\r\n\t\t\treturn $http.put(\"/api/v1/user/\" + email, user).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t\tvm.deleteUser = function(email) {\r\n\t\t\treturn $http.delete(\"/api/v1/user/\" + email).then(function(data){\r\n\t\t\t\treturn data.data;\r\n\t\t\t});\r\n\t\t};\r\n\t}]);\r\n})();","//This component provides a listing of categories\r\n\r\n//The component renders a category widget for every category\r\n//and one for the 'uncategorized' category if not empty and admin mode is on\r\n\r\n//Also renders a 'create category' widget if admin mode on\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"categoriesComponent\", {\r\n\r\n    //receives an array of category objects from state resolve\r\n    //also receives the 'uncategorized' category object\r\n    //from root-state via inheritance\r\n    bindings: {\r\n      categories: \"<\",\r\n      uncategorized: \"<\"\r\n    },\r\n    controller: categoriesComponentController,\r\n    templateUrl: \"categories-component.tpl\"\r\n  });\r\n\r\n  categoriesComponentController.$inject = [\"$scope\", \"globals\"];\r\n\r\n  function categoriesComponentController($scope, globals) {\r\n    var vm = this;\r\n\r\n    //bind globals to be able to access the adminEditMode status\r\n    vm.globals = globals;\r\n\r\n    //dispatches the event to signal close to all widgets except\r\n    //the one identified by the \"except parameter\"\r\n    //the function is passed as behavior binding (&) to all form widgets\r\n    vm.broadcastCloseAllOthers = function(except){\r\n      $scope.$broadcast(\"close:forms\", except);\r\n    };    \r\n  }\r\n})();","//This component displays a name for the category with the listing count\r\n//as well as the delete and edit links (if logged in as admin)\r\n\r\n//Clicking the edit link opens the edit form and calls onBeginEdit binding\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"categoryWidgetComponent\", {\r\n\r\n    //receives category object as an attribute\r\n    //binds to onBeginEdit function via attribute\r\n    //to notify other forms to close\r\n    bindings: {\r\n      category: \"<\",\r\n      onBeginEdit: \"&\"\r\n    },\r\n    controller: categoryWidgetComponentController,\r\n    templateUrl: \"category-widget-component.tpl\"\r\n  });\r\n\r\n  categoryWidgetComponentController.$inject = [\r\n    \"$scope\",\r\n    \"$state\",\r\n    \"$timeout\",\r\n    \"categoriesService\",\r\n    \"globals\"\r\n  ];\r\n\r\n  function categoryWidgetComponentController(\r\n    $scope,\r\n    $state,\r\n    $timeout,\r\n    categoriesService,\r\n    globals   \r\n  ) {\r\n    var vm = this;\r\n\r\n    //current error state\r\n    vm.errors = {\r\n      categoryExists: false,\r\n      unknownError: false\r\n    };\r\n\r\n    //tracks the state of the form\r\n    vm.formOpen = false;\r\n\r\n    //bind globals to be able to access the adminEditMode status\r\n    vm.globals = globals;\r\n\r\n    //new category name to be submitted\r\n    vm.newCategoryName = \"\";\r\n\r\n    //runs automatically when controller is initialized\r\n    //when category is bound to controller sets the new category name\r\n    //to bound category name\r\n    vm.$onInit = function() {\r\n      vm.newCategoryName = vm.category.name;\r\n    };\r\n\r\n    //opens the edit form\r\n    vm.beginEdit = function() {\r\n\r\n      //send a signal to parent to dispatch a closing event to all widgets\r\n      //except the current one\r\n      vm.onBeginEdit({except: vm.category});\r\n\r\n      //open the form\r\n      vm.formOpen = true;\r\n\r\n      //focus and highlight the input field\r\n      //timeout is necessary to allow the digest cycle time to refresh\r\n      $timeout(function(){\r\n        document.getElementById(\"category-edit-field\").focus();\r\n        document.getElementById(\"category-edit-field\").select();\r\n      });\r\n    };\r\n\r\n    //closes the form and resets the new category name\r\n    //clears the errors\r\n    vm.cancelEdit = function() {\r\n\r\n      //close the form\r\n      vm.formOpen = false;\r\n\r\n      //revert newCategoryName back to existing category name\r\n      vm.newCategoryName = vm.category.name;\r\n\r\n      //reset error state\r\n      vm.resetErrors();\r\n    };\r\n\r\n    //attempts to delete category via categoriesService\r\n    vm.deleteCategory = function() {\r\n      categoriesService.removeCategory(vm.category.name).\r\n      then(function() {\r\n\r\n        //if deletion successful, reload current state\r\n        $state.go($state.current, {}, {reload: true});\r\n      }).\r\n      catch(function(err){\r\n\r\n        //in case of error, output error to console\r\n        console.error(err);\r\n      });\r\n    };\r\n\r\n    //reset error status\r\n    vm.resetErrors = function() {\r\n      for (var error in vm.errors) {\r\n        vm.errors[error] = false;\r\n      }\r\n    };\r\n\r\n    //attempts to update category name via categoriesService\r\n    vm.submitCategory = function() {\r\n      categoriesService.editCategory(vm.category.name, {name: vm.newCategoryName || \"\"}).\r\n      then(function(){\r\n\r\n        //if successful, close the form and reload current state\r\n        vm.formOpen = false;\r\n        $state.go($state.current, {}, {reload: true});\r\n      }).\r\n      catch(function(err){\r\n\r\n        //in case of error keep the form open\r\n\r\n        //focus and highlight the input field\r\n        //timeout is necessary to allow the digest cycle time to refresh\r\n        $timeout(function(){\r\n          document.getElementById(\"category-edit-field\").focus();\r\n          document.getElementById(\"category-edit-field\").select();\r\n        });\r\n\r\n        //set appropriate error status\r\n        if (err.status === 409) {\r\n          vm.errors.categoryExists = true;\r\n        } else {\r\n          vm.errors.unknownError = true;\r\n          console.error(err);\r\n        }\r\n      });\r\n    };\r\n\r\n    //listen for 'close:forms' event\r\n    //when received, check to make sure the current widget was not the sender\r\n    //if not - close this form\r\n    $scope.$on(\"close:forms\", function(event, except){\r\n      if (except._id !== vm.category._id) {\r\n        vm.cancelEdit();\r\n      }\r\n    });   \r\n  }\r\n})();","//This component shows a \"create category\" link which turns into a form\r\n//when activated\r\n\r\n//Clicking the link opens the create form and calls onBeginEdit binding\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"createCategoryWidgetComponent\", {\r\n\r\n    //binds to onBeginEdit function via attribute\r\n    //to notify other forms to close\r\n    bindings: {\r\n      onBeginEdit: \"&\"\r\n    },\r\n    controller: createCategoryWidgetComponentController,\r\n    templateUrl: \"create-category-widget-component.tpl\"\r\n  });\r\n\r\n  createCategoryWidgetComponentController.$inject = [\r\n    \"$scope\",\r\n    \"$state\",\r\n    \"$timeout\",\r\n    \"categoriesService\"    \r\n  ];\r\n\r\n  function createCategoryWidgetComponentController(\r\n    $scope,\r\n    $state,\r\n    $timeout,\r\n    categoriesService\r\n  ) {\r\n    var vm = this;\r\n\r\n    //current error state\r\n    vm.errors = {\r\n      categoryExists: false,\r\n      unknownError: false\r\n    };\r\n\r\n    //tracks the state of the form\r\n    vm.formOpen = false;\r\n    \r\n    //new category name to be submitted\r\n    vm.newCategoryName = \"\";\r\n\r\n    //opens the edit form\r\n    vm.beginEdit = function() {\r\n\r\n      //send a signal to parent to dispatch a closing event to all widgets\r\n      //except the current one\r\n      vm.onBeginEdit({except: \"new\"});\r\n\r\n      //open the form\r\n      vm.formOpen = true;\r\n\r\n      //focus the input field\r\n      //timeout is necessary to allow the digest cycle time to refresh\r\n      $timeout(function(){\r\n        document.getElementById(\"category-create-field\").focus();         \r\n      });\r\n    };\r\n\r\n    //closes the form and resets the new category name\r\n    //clears the errors\r\n    vm.cancelEdit = function() {\r\n\r\n      //close the form\r\n      vm.formOpen = false;\r\n\r\n      //revert newCategoryName back to existing category name\r\n      vm.newCategoryName = \"\";\r\n\r\n      //reset error state\r\n      vm.resetErrors();\r\n    };\r\n\r\n    //reset error status\r\n    vm.resetErrors = function() {\r\n      for (var error in vm.errors) {\r\n        vm.errors[error] = false;\r\n      }\r\n    };\r\n\r\n    //attempts to create a new category via categoriesService\r\n    vm.submitCategory = function() {\r\n      categoriesService.createCategory(vm.newCategoryName).\r\n      then(function(){\r\n\r\n        //if successful, close the form and reload current state\r\n        vm.formOpen = false;\r\n        $state.go($state.current, {}, {reload: true});\r\n      }).\r\n      catch(function(err){\r\n\r\n        //in case of error keep the form open\r\n\r\n        //focus and highlight the input field\r\n        //timeout is necessary to allow the digest cycle time to refresh\r\n        $timeout(function(){\r\n          document.getElementById(\"category-create-field\").focus();         \r\n          document.getElementById(\"category-create-field\").select();          \r\n        });\r\n\r\n        //set appropriate error status\r\n        if (err.status === 409) {\r\n          vm.errors.categoryExists = true;\r\n        } else {\r\n          vm.errors.unknownError = true;\r\n          console.error(err);\r\n        }\r\n      });\r\n    };\r\n\r\n    //listen for 'close:forms' event\r\n    //when received, check to make sure the current widget was not the sender\r\n    //if not - close this form\r\n    $scope.$on(\"close:forms\", function(event, except){\r\n      if (except !== \"new\") {\r\n        vm.cancelEdit();\r\n      }\r\n    });\r\n  }\r\n})();","//This is a simple component which renders the footer of the site\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"footerComponent\", {\r\n\t\ttemplateUrl: \"footer-component.tpl\"\r\n\t});\r\n})();","//This is a component that renders the header of the site\r\n//The header contains an edit mode switch (therefore bound to globals)\r\n//Also it contains the login/logout widget\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"headerComponent\", {\r\n\r\n    //receives 'uncategorized' category object as an attribute\r\n    //to display number of items in this category to the admin user\r\n    bindings: {\r\n      uncategorized: \"<\"\r\n    },\r\n    controller: headerComponentController,\r\n    templateUrl: \"header-component.tpl\"\r\n  });\r\n\r\n  headerComponentController.$inject = [\"authenticationService\", \"globals\"];\r\n\r\n  function headerComponentController(authenticationService, globals) {\r\n    var vm = this;\r\n\r\n    //bind authentication bindings to have access to the currently\r\n    //logged-in user information\r\n    //(has properties: loggedIn(boolean), email(string), and admin(boolean))\r\n    vm.authenticationBindings = authenticationService.bindings;\r\n    \r\n    //bind globals to be able to access the adminEditMode status\r\n    vm.globals = globals;\r\n\r\n    //toggles the admin edit mode\r\n    vm.toggleAdminEditMode = function() {\r\n      globals.adminEditMode = !globals.adminEditMode;\r\n    };\r\n  }\r\n})();","//This component widget is placed in the header and controls login and logout functionality\r\n//via the userLoginService and authenticationService\r\n\r\n//When login link is clicked the form is displayed\r\n\r\n//The controller exposes the following functions\r\n\r\n//login: sends the login information to the backend via userLoginService\r\n//in case of successful login, cancel login function is called to clear the username and password\r\n//in case of login failure form remains open and username and password is cleared\r\n\r\n//logout: sends the logout request to userLoginService\r\n//in case of failure the message is displayed (should never fail)\r\n\r\n//cancelLogin: clears the username and password and closes the login form\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"loginLogoutWidgetComponent\", {\r\n    controller: loginLogoutWidgetController,\r\n    templateUrl: \"login-logout-widget-component.tpl\"\r\n  });\r\n\r\n  loginLogoutWidgetController.$inject = [\r\n    \"$state\",\r\n    \"$window\",\r\n    \"authenticationService\",\r\n    \"userLoginService\"\r\n  ];\r\n\r\n  function loginLogoutWidgetController(\r\n    $state,\r\n    $window,\r\n    authenticationService,\r\n    userLoginService\r\n  ) {\r\n    var vm = this;\r\n\r\n    //bind authentication bindings to have access to the currently\r\n    //logged-in user information\r\n    //(has properties: loggedIn(boolean), email(string), and admin(boolean))\r\n    vm.authenticationBindings = authenticationService.bindings;\r\n\r\n    //current error state\r\n    vm.errors = {\r\n      invalidLogin: false,\r\n      unknownError: false\r\n    };\r\n\r\n    //tracks the state of the form\r\n    vm.formOpen = false;\r\n\r\n    //cancels the login, resets the email and password\r\n    //closes the form and resets the error state\r\n    vm.cancelLogin = function() {\r\n      vm.email = \"\";\r\n      vm.password = \"\";\r\n      vm.formOpen = false;\r\n      vm.resetErrors();\r\n    };\r\n\r\n    //attempts to log in via userLoginService\r\n    vm.login = function() {\r\n      userLoginService.login(vm.email, vm.password).\r\n      then(function(){\r\n\r\n        //if successful - cancel the login\r\n        //this updates the authentication bindings\r\n        vm.cancelLogin();\r\n      }).\r\n      catch(function(err) {\r\n\r\n        //if unsuccessful - reset the email and password\r\n        vm.email = \"\";\r\n        vm.password = \"\";\r\n\r\n        //set appropriate error status\r\n        if (err.status === 403) {\r\n          vm.errors.invalidLogin = true;\r\n        } else {\r\n          vm.errors.unknownError = true;\r\n          console.error(err);\r\n        }\r\n      });\r\n    };\r\n\r\n    //attempts to log out via userLoginService\r\n    vm.logout = function() {\r\n      userLoginService.logout().\r\n      then(function(){\r\n\r\n        //if successful check if the current route is protected\r\n        if ($state.current.data && $state.current.data.protected === \"user\") {\r\n\r\n          //if protected load the categories state\r\n          $state.go(\"root-state.categories-state\", {}, {reload: true});\r\n        } else {\r\n\r\n          //else reload the current state\r\n          $state.go($state.current, {}, {reload: true});            \r\n        }\r\n      }).\r\n      catch(function(err) {\r\n\r\n        //if unsuccessful set the appropriate error status\r\n        vm.errors.unknownError = true;\r\n        console.error(err);\r\n      });\r\n    };\r\n\r\n    //resets error status\r\n    vm.resetErrors = function() {\r\n      for (var error in vm.errors) {\r\n        vm.errors[error] = false;\r\n      }\r\n    };    \r\n  }\r\n})();","//This is a root component, it simply renders header and footer components\r\n//and provides a placeholder for current content component\r\n\r\n(function(){\r\n  \"use strict\";\r\n  angular.module(\"mikeslist\").\r\n  component(\"rootComponent\", {\r\n\r\n    //receives 'uncategorized' category object from state resolve\r\n    //it will be passed to header component and all child components\r\n    bindings: {\r\n      uncategorized: \"<\"\r\n    },\r\n    templateUrl: \"root-component.tpl\"\r\n  });\r\n})();","//This component shows the edit listing form for a specific listing\r\n//the \"categories\" binding received all category names to be displayed as checkboxes\r\n//also it receives \"listing\" through state params to get the current listing data and categories\r\n//\r\n//The template used is common between this and post-listing-form-component\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"editListingFormComponent\", {\r\n\t\tbindings: {\r\n\t\t\tcategories: \"<\"\r\n\t\t},\r\n\t\tcontroller: [\"$scope\", \"$state\", \"$stateParams\", \"$timeout\", \"listingsService\", function($scope, $state, $stateParams, $timeout, listingsService) {\r\n\t\t\tvar vm = this;\r\n\r\n\t\t\t//prepare listing model to be submitted in case of update\r\n\t\t\tvm.listing = {\r\n\t\t\t\tcategories: []\r\n\t\t\t};\r\n\r\n\t\t\tvm.errors = {\r\n\t\t\t\tcategoryRequired: false\r\n\t\t\t};\r\n\r\n\t\t\t//this array reflects the current state of checkboxes\r\n\t\t\tvm.checkboxesState = [];\r\n\r\n\t\t\tvm.$onInit = function(){\r\n\t\t\t\tvar allCategoryIds = vm.categories.map(function(category){\r\n\t\t\t\t\treturn category._id;\r\n\t\t\t\t});\r\n\t\t\t\tObject.assign(vm.listing, $stateParams.listing);\r\n\t\t\t\tvar currentCategoryIds = vm.listing.categories.map(function(category){\r\n\t\t\t\t\treturn category._id;\r\n\t\t\t\t});\t\t\t\r\n\t\t\t\tvm.checkboxesState = allCategoryIds.map(function(categoryId){\r\n\t\t\t\t\treturn currentCategoryIds.indexOf(categoryId) !== -1 ? categoryId : false;\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\r\n\t\t\t//watch the state of checkbox and synchronize with listing model\r\n\t\t\t//which will be submitted by filtering out null values\r\n\t\t\t//(as checkboxes are checked and unchecked they leave behind null values)\r\n\t\t\t$scope.$watch(function(){\r\n\t\t\t\treturn vm.checkboxesState;\r\n\t\t\t},function(){\r\n\t\t\t\tvm.listing.categories = vm.checkboxesState.filter(function(categoryId){\r\n\t\t\t\t\treturn categoryId; //nulls will be ignored\r\n\t\t\t\t});\r\n\t\t\t}, true);\r\n\r\n\t\t\t//verify at least one category has been selected and submit the form\r\n\t\t\tvm.submitForm = function() {\r\n\t\t\t\tif (vm.listing.categories.length === 0) {\r\n\t\t\t\t\tvm.errors.categoryRequired = true;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//attempt to update the listing\r\n\t\t\t\t\tlistingsService.editListing($stateParams.listing._id, vm.listing).\r\n\t\t\t\t\tthen(function(){\r\n\r\n\t\t\t\t\t\t//if successful - redirect to listing state for the saved listing\r\n\t\t\t\t\t\t$state.go(\"root-state.listing-state\", {listingId: vm.listing._id}, {reload: true});\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tcatch(function(err){\r\n\r\n\t\t\t\t\t\t//in case of error, display alert message and output error to console\r\n\t\t\t\t\t\twindow.alert(err.data.error);\r\n\t\t\t\t\t\tconsole.error(err);\r\n\r\n\t\t\t\t\t\t//them redirect to the listing state for the original listing\r\n\t\t\t\t\t\t$state.go(\"root-state.listing-state\", {listingId: $stateParams.listing._id}, {reload: true});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"listing-form.tpl\"\r\n\t});\r\n})();","//This component renders a single listing\r\n//It receives the listing binding resolved in state transition\r\n//Template contains edit and delete links which show up when admin mode is on\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"listingComponent\", {\r\n\t\tbindings: {\r\n\t\t\tlisting: \"<\"\r\n\t\t},\r\n\t\tcontroller: [\"authenticationService\", \"listingsService\", \"$state\", \"$stateParams\", function(authenticationService, listingsService, $state, $stateParams){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.authenticationBindings = authenticationService.bindings;\r\n\t\t\tvm.deleteListing = function() {\r\n\t\t\t\tif (window.confirm(\"Are you sure you want to permanently delete this listing?\")) {\r\n\t\t\t\t\tlistingsService.deleteListing(vm.listing._id).\r\n\t\t\t\t\tthen(function(){\r\n\t\t\t\t\t\tif ($stateParams.category.name) {\r\n\t\t\t\t\t\t\t$state.go(\"root-state.listings-state\", {category: $stateParams.category.name}, {reload: true});\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t$state.go(\"root-state.categories-state\", {}, {reload: true});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tcatch(function(err){\r\n\r\n\t\t\t\t\t\t//in case of error, display alert message and output error to console\r\n\t\t\t\t\t\twindow.alert(err.data.error);\r\n\t\t\t\t\t\tconsole.error(err);\r\n\r\n\t\t\t\t\t\t//them reload current state\r\n\t\t\t\t\t\t$state.go($state.current, {}, {reload: true});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"listing-component.tpl\"\r\n\t});\r\n})();","//This component renders all listing titles for category\r\n//The binding is resolved in state transition\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"listingsComponent\", {\r\n\t\tbindings: {\r\n\t\t\tcategory: \"<\"\r\n\t\t},\r\n\t\ttemplateUrl: \"listings-component.tpl\"\r\n\t});\r\n})();","//This component shows the post listing form for a specific listing\r\n//the \"categories\" binding received all category names to be displayed as checkboxes\r\n//\r\n//The template used is common between this and post-listing-form-component\r\n\r\n(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"postListingFormComponent\", {\r\n\t\tbindings: {\r\n\t\t\tcategories: \"<\"\r\n\t\t},\r\n\t\tcontroller: [\"listingsService\", \"$state\", \"$scope\", function(listingsService, $state, $scope) {\r\n\t\t\tvar vm = this;\r\n\r\n\t\t\t//prepare listing model\r\n\t\t\tvm.listing = {\r\n\t\t\t\tcategories: []\r\n\t\t\t};\r\n\r\n\t\t\tvm.errors = {\r\n\t\t\t\tcategoryRequired: false\r\n\t\t\t};\r\n\r\n\t\t\t//this array reflects the current state of checkboxes\r\n\t\t\tvm.checkboxesState = [];\r\n\r\n\t\t\t//watch the state of checkbox and synchronize with listing model\r\n\t\t\t//by filtering out null values\r\n\t\t\t$scope.$watch(function(){\r\n\t\t\t\treturn vm.checkboxesState;\r\n\t\t\t},function(){\r\n\t\t\t\tvm.listing.categories = vm.checkboxesState.filter(function(categoryId){\r\n\t\t\t\t\treturn categoryId; //nulls will be ignored\r\n\t\t\t\t});\r\n\t\t\t}, true);\r\n\r\n\t\t\t//verify at least one category has been selected and submit the form\r\n\t\t\tvm.submitForm = function() {\r\n\t\t\t\tif (vm.listing.categories.length === 0) {\r\n\t\t\t\t\tvm.errors.categoryRequired = true;\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t//attempt to post the listing\r\n\t\t\t\t\tlistingsService.postListing(vm.listing).\r\n\t\t\t\t\tthen(function(data){\r\n\r\n\t\t\t\t\t\t//if successful, load listing state with the saved state id\r\n\t\t\t\t\t\t$state.go(\"root-state.listing-state\", {listingId: data._id}, {reload: true});\r\n\t\t\t\t\t}).\r\n\t\t\t\t\tcatch(function(err){\r\n\r\n\t\t\t\t\t\t//if failed, display alert box with message\r\n\t\t\t\t\t\t//and output error to console\r\n\t\t\t\t\t\twindow.alert(err.data.error);\r\n\t\t\t\t\t\tconsole.error(err);\r\n\r\n\t\t\t\t\t\t//then reload the categories state\r\n\t\t\t\t\t\t$state.go(\"root-state.categories-state\", {}, {reload: true});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"listing-form.tpl\"\r\n\t});\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"createUserFormComponent\", {\r\n\t\tcontroller: [\"$state\", \"$timeout\", \"$scope\", \"usersService\", function($state, $timeout, $scope, usersService){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.errors = {\r\n\t\t\t\tpasswordMismatched: false,\r\n\t\t\t\temailExists: false,\r\n\t\t\t\tweakPassword: false\r\n\t\t\t};\r\n\t\t\tvm.resetErrors = function() {\r\n\t\t\t\tfor (var error in vm.errors) {\r\n\t\t\t\t\tvm.errors[error] = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvm.submitForm = function() {\r\n\t\t\t\tif (vm.user.password !== vm.user.passwordConfirmation) {\r\n\t\t\t\t    vm.errors.passwordMismatched = true;\r\n\t\t\t\t    $scope.userForm.$setPristine();\r\n\t\t\t\t\tvm.user.password = \"\";\r\n\t\t\t\t\tvm.user.passwordConfirmation = \"\";\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tusersService.createUser(vm.user).\r\n\t\t\t\tthen(function(data){\r\n\t\t\t\t\t$state.go(\"root-state.user-state\", {email: data.email}, {reload: true});\r\n\t\t\t\t}).\r\n\t\t\t\tcatch(function(err){\r\n\t\t\t\t\tif (err.status === 409) {\r\n\t\t\t\t\t\tvm.errors.emailExists = true;\r\n\t\t\t\t\t} else if (err.status === 400)  {\r\n\t\t\t\t\t\tvm.errors.weakPassword = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.errors.unknownError = true;\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.userForm.$setPristine();\r\n\t\t\t\t\tvm.user.password = \"\";\r\n\t\t\t\t\tvm.user.passwordConfirmation = \"\";\r\n\t\t\t\t\t$timeout(function(){\r\n\t\t\t\t\t\tdocument.getElementById(\"email-field\").focus();\r\n\t\t\t\t\t\tdocument.getElementById(\"email-field\").select();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"user-form.tpl\"\r\n\t});\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"editUserFormComponent\", {\r\n\t\tcontroller: [\"$state\", \"$timeout\", \"$stateParams\", \"$scope\", \"usersService\", \"authenticationService\", function($state, $timeout, $stateParams, $scope, usersService, authenticationService){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.errors = {\r\n\t\t\t\tpasswordMismatched: false,\r\n\t\t\t\temailExists: false,\r\n\t\t\t\tweakPassword: false\r\n\t\t\t};\r\n\t\t\tvm.resetErrors = function() {\r\n\t\t\t\tfor (var error in vm.errors) {\r\n\t\t\t\t\tvm.errors[error] = false;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tvm.email = \"\";\r\n\t\t\tvm.authenticationBindings = authenticationService.bindings;\r\n\t\t\tvm.$onInit = function() {\r\n\t\t\t\tvm.email = $stateParams.user.email;\r\n\t\t\t\tObject.assign(vm.user, $stateParams.user);\r\n\t\t\t};\r\n\t\t\tvm.submitForm = function() {\r\n\t\t\t\tif (vm.user.password !== vm.user.passwordConfirmation) {\r\n\t\t\t\t\tvm.errors.passwordMismatched = true;\r\n\t\t\t\t\t$scope.userForm.$setPristine();\r\n\t\t\t\t\tdelete vm.user.password;\r\n\t\t\t\t\tdelete vm.user.passwordConfirmation;\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tusersService.updateUser(vm.email, vm.user).\r\n\t\t\t\tthen(function(data){\r\n\t\t\t\t\t$state.go(\"root-state.user-state\", {email: data.email}, {reload: true});\r\n\t\t\t\t}).\r\n\t\t\t\tcatch(function(err){\r\n\t\t\t\t\tif (err.status === 409) {\r\n\t\t\t\t\t\tvm.errors.emailExists = true;\r\n\t\t\t\t\t} else if (err.status === 400)  {\r\n\t\t\t\t\t\tvm.errors.weakPassword = true;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvm.errors.unknownError = true;\r\n\t\t\t\t\t\tconsole.error(err);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t$scope.userForm.$setPristine();\r\n\t\t\t\t\tvm.user.password = \"\";\r\n\t\t\t\t\tvm.user.passwordConfirmation = \"\";\r\n\t\t\t\t\t$timeout(function(){\r\n\t\t\t\t\t\tdocument.getElementById(\"email-field\").focus();\r\n\t\t\t\t\t\tdocument.getElementById(\"email-field\").select();\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"user-form.tpl\"\r\n\t});\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"userComponent\", {\r\n\t\tbindings: {\r\n\t\t\tuser: \"<\"\r\n\t\t},\r\n\t\tcontroller: [\"usersService\", \"authenticationService\", \"$state\", function(usersService, authenticationService, $state){\r\n\t\t\tvar vm = this;\r\n\t\t\tvm.authenticationBindings = authenticationService.bindings;\r\n\t\t\tvm.deleteUser = function() {\r\n\t\t\t\tif (window.confirm(\"Are you sure you want to permanently delete this user?\")) {\r\n\t\t\t\t\tusersService.deleteUser(vm.user.email).\r\n\t\t\t\t\tthen(function(){\r\n\t\t\t\t\t\t$state.go(\"root-state.users-state\");\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}],\r\n\t\ttemplateUrl: \"user-component.tpl\"\r\n\t});\r\n})();","(function(){\r\n\t\"use strict\";\r\n\tangular.module(\"mikeslist\").\r\n\tcomponent(\"usersComponent\", {\r\n\t\tbindings: {\r\n\t\t\tusers: \"<\"\r\n\t\t},\r\n\t\ttemplateUrl: \"users-component.tpl\"\r\n\t});\r\n})();"]}